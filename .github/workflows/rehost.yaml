# This is a basic workflow to help you get started with Actions

name: git-ipfs-rehost

# Controls when the workflow will run
on:
  # Triggers on pull requests
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # clones the new submodule repository
  rehost:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Branch name
        run: echo running on branch ${GITHUB_HEAD_REF}

      # Install IPFS
      - name: Install IPFS
        run: wget https://dist.ipfs.tech/kubo/v0.15.0/kubo_v0.15.0_linux-amd64.tar.gz && tar -xvzf kubo_v0.15.0_linux-amd64.tar.gz && cd kubo && sudo bash install.sh
      - name: Check Verison
        run: ipfs --version

      - name: List Directory to Pin
        working-directory: repositories/${GITHUB_REF#refs/heads/}
        run: ls
      - name: Pin Submodule
        run: |
            curl --location --request POST 'https://api.pinata.cloud/pinning/pinFileToIPFS' \
            --header 'Authorization: Bearer ${{ secrets.PINTRA_JWT }}' \
            --form 'file=@"${GITHUB_WORKSPACE}/repositories/${GITHUB_REF##*/}"' \
            --form 'pinataOptions="{\"cidVersion\": 1}"' \
            --form 'pinataMetadata="{\"name\": \"${GITHUB_REF##*/}\", \"keyvalues\": {\"company\": \"adjacentresearch\"}}"'
      - name: List Pins
        run: |
            curl --location --request GET 'https://api.pinata.cloud/pinning/pinJobs?status=retrieving&sort=ASC' --header 'Authorization: Bearer ${{ secrets.PINTRA_JWT }}'
      - name: Comment PR
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            **Hello**
            üåè
            !
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default
